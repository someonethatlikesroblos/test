local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "ðŸŒˆ Pop it trading Scripts",
    LoadingTitle = "Pop it trading hub",
    LoadingSubtitle = "by SomeoneThatLikesScripts",
    ConfigurationSaving = {
       Enabled = false,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "Pop it trading"
    },
    Discord = {
       Enabled = false,
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
       Title = "Pop it trading Key System",
       Subtitle = "Key in desc",
       Note = ";)",
       FileName = "Pop it trading", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"https://pastebin.com/raw/QwDTrtuL"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })

 local MainTab = Window:CreateTab("Scripts", nil) -- Title, Image
 local MainSection = MainTab:CreateSection("Main")

 Rayfield:Notify({
    Title = "Script has been executed successfully",
    Content = "Enjoy!",
    Duration = 3,
    Image = nil,
    Actions = { -- Notification Buttons
       Ignore = {
          Name = "Okay!",
          Callback = function()
          print("The user tapped Okay!")
       end
    },
 },
 })

 local Button = MainTab:CreateButton({
    Name = "Extrame",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/xfaz/gamecheck/main/hub", true))()
    end,
 })

 local Button = MainTab:CreateButton({
    Name = "Buy Script",
    Callback = function()
        loadstring(game:HttpGet("https://pastebin.com/raw/iUDnA33G"))()
    end,
 })

 local Button = MainTab:CreateButton({
    Name = "OP Buy Script",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Uhhh1230/Pop-It-Trading/main/E"))()
    end,
 })

 local Button = MainTab:CreateButton({
    Name = "Admin panel",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/sombolian/scripts/main/Pop_It_Trading'))()
    end,
 })

 local Button = MainTab:CreateButton({
    Name = "Shield Script",
    Callback = function()
        _G.credits = "Credits to iShield. DISCORD SERVER INVITE LINK: https://discord.gg/x57Xk65xZs"
loadstring(game:HttpGet("https://raw.githubusercontent.com/iShield2005/scripts/master/shieldhubloader2"))()
    end,
 })

 local OtherTab = Window:CreateTab("Other", nil) -- Title, Image
 local Section = OtherTab:CreateSection("OtherScripts")

 local Button = OtherTab:CreateButton({
    Name = "Fly",
    Callback = function()
        loadstring(game:HttpGet("https://pastebin.com/raw/brpnE04k"))()
    end,
 })

 local Button = OtherTab:CreateButton({
    Name = "InfJump",
    Callback = function()
        --Toggles the infinite jump between on or off on every script run
_G.infinjump = not _G.infinjump

if _G.infinJumpStarted == nil then
	--Ensures this only runs once to save resources
	_G.infinJumpStarted = true
	
	--Notifies readiness
	game.StarterGui:SetCore("SendNotification", {Title="Youtube Hub"; Text="Infinite Jump Activated!"; Duration=5;})

	--The actual infinite jump
	local plr = game:GetService('Players').LocalPlayer
	local m = plr:GetMouse()
	m.KeyDown:connect(function(k)
		if _G.infinjump then
			if k:byte() == 32 then
			humanoid = game:GetService'Players'.LocalPlayer.Character:FindFirstChildOfClass('Humanoid')
			humanoid:ChangeState('Jumping')
			wait()
			humanoid:ChangeState('Seated')
			end
		end
	end)
end
    end,
 })

 local Slider = OtherTab:CreateSlider({
    Name = "WalkSpeed",
    Range = {0, 500},
    Increment = 1,
    Suffix = "Speed",
    CurrentValue = 16,
    Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
    end,
 })

 local Button = OtherTab:CreateButton({
    Name = "Infinite yield",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
    end,
 })
